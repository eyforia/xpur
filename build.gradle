plugins {
    id 'java-library'
    id 'groovy'
    id 'maven'
    id 'signing'
}

group = 'org.xpur'
version = '0.7'
ext.packaging = 'jar'
description = '''XPur is a cute XML parser for Groovy. It's build on StAX and is capable of handling huge XML files with low memory overhead.'''

sourceCompatibility = 1.8
targetCompatibility = 1.8

def isDevBuild
def isCiBuild
def isReleaseBuild
def sonatypeRepositoryUrl

//set build variables based on build type (release, continuous integration, development)
if (hasProperty('release')) {
    assert !version.endsWith('-SNAPSHOT')
    isReleaseBuild = true
    sonatypeRepositoryUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
} else if (hasProperty('ci')) {
    isCiBuild = true
    sonatypeRepositoryUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
} else {
    isDevBuild = true
}

repositories {
    mavenCentral()
}

dependencies {
    api 'org.codehaus.groovy:groovy:3.0.7'
    testImplementation 'org.spockframework:spock-core:2.0-M4-groovy-3.0'
    testImplementation 'com.fasterxml.woodstox:woodstox-core:6.1.1'
}

test{
    useJUnitPlatform()  //use jUnit5 / Spock2
}


task groovydocJar(type: Jar, dependsOn: groovydoc) {
    archiveClassifier= 'javadoc'
    from 'build/docs/groovydoc'
}

task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives jar
    archives groovydocJar
    archives sourcesJar
}
artifacts {
    archives groovydocJar, sourcesJar
}
//********* artifact signing *********
if (isReleaseBuild) {
    signing {
        sign configurations.archives
    }
} else {
    task signArchives {
        // do nothing
    }
}

uploadArchives {
    repositories {
        if (isDevBuild) {
            mavenLocal()
        } else {
            mavenDeployer {
                repository(url: sonatypeRepositoryUrl) {
                    authentication(userName: sonatypeUsername, password: sonatypePassword)
                }

                if (isReleaseBuild) {
                    beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
                }

                pom.project {
                    name 'XPur'
                    packaging 'jar'
                    description rootProject.description
                    url 'http://xpur.org'

                    scm {
                        url 'https://github.com/eyforia/xpur'
                        connection 'scm:git@github.com:eyforia/xpur.git'
                        developerConnection 'scm:git@github.com:eyforia/xpur.git'
                    }

                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                            distribution 'repo'
                        }
                    }

                    developers {
                        developer {
                            id 'eyforia'
                            name 'Andrei Karneyenka'
                            email 'andrei@claz.org'
                            url 'https://www.linkedin.com/in/eyforia'
                        }
                    }
                }
            }
        }
    }
}